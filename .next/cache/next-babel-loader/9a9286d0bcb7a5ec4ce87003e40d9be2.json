{"ast":null,"code":"var _jsxFileName = \"/home/anomy/Documents/nextjs-projects/yazbana/client/components/layout/ActiveLink.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport { Link } from '@chakra-ui/layout';\nexport const ActiveLink = ({\n  href,\n  children\n}) => {\n  const router = useRouter();\n  let className = children.props.className || '';\n\n  if (router.pathname === href) {\n    className = `${className} selected`;\n  }\n\n  return __jsx(NextLink, {\n    scroll: false,\n    href: href,\n    shallow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.cloneElement(children, {\n    className\n  })));\n};","map":{"version":3,"sources":["/home/anomy/Documents/nextjs-projects/yazbana/client/components/layout/ActiveLink.js"],"names":["React","NextLink","useRouter","Link","ActiveLink","href","children","router","className","props","pathname","cloneElement"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAChD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,MAAIM,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAID,MAAM,CAACG,QAAP,KAAoBL,IAAxB,EAA8B;AAC5BG,IAAAA,SAAS,GAAI,GAAEA,SAAU,WAAzB;AACD;;AAED,SACE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAE,KAAlB;AAAyB,IAAA,IAAI,EAAEH,IAA/B;AAAqC,IAAA,OAAO,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAOL,KAAK,CAACW,YAAN,CAAmBL,QAAnB,EAA6B;AAAEE,IAAAA;AAAF,GAA7B,CAAP,CADF,CADF;AAKD,CAbM","sourcesContent":["import React from 'react';\nimport NextLink from 'next/link';\nimport { useRouter } from 'next/router';\nimport { Link } from '@chakra-ui/layout';\n\nexport const ActiveLink = ({ href, children }) => {\n  const router = useRouter();\n\n  let className = children.props.className || '';\n  if (router.pathname === href) {\n    className = `${className} selected`;\n  }\n\n  return (\n    <NextLink scroll={false} href={href} shallow={true}>\n      <Link>{React.cloneElement(children, { className })}</Link>\n    </NextLink>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}