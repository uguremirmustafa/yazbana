{"ast":null,"code":"var _jsxFileName = \"/home/anomy/Documents/nextjs-projects/yazbana/client/components/PostBody.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport markdownStyles from './PostBody.module.css';\nimport BlockContent from '@sanity/block-content-to-react';\nimport { Box } from '@chakra-ui/layout';\nimport { urlForImage } from '@lib/sanity';\nexport default function PostBody(_ref) {\n  var _this = this;\n\n  var content = _ref.content;\n  var serializers = {\n    // marks: { code: inlineCode, link: link },\n    // hardBreak: true,\n    // list: list,\n    // listItem,\n    types: {\n      //   block: BlockRenderer,\n      //   code: (props) => {\n      //     return (\n      //       <div>\n      //         <SyntaxHighlighter\n      //           showLineNumbers={false}\n      //           style={monokai}\n      //           wrapLines={true}\n      //           language={props.node.language}\n      //           lineProps={{ style: { wordBreak: 'break-word', whiteSpace: 'pre-wrap' } }}\n      //           customStyle={{\n      //             borderRadius: '8px',\n      //             margin: '20px 0px',\n      //             padding: '20px 20px',\n      //             fontSize: '13px',\n      //             boxShadow: '0px 1px 20px 10px rgba(1,1,1,0.1)',\n      //             width: '100%',\n      //           }}\n      //         >\n      //           {props.node.code}\n      //         </SyntaxHighlighter>\n      //       </div>\n      //     );\n      //   },\n      //   youtube: (props) => {\n      //     const opts = {\n      //       height: '290',\n      //       width: '100%',\n      //     };\n      //     let id = getYouTubeID(props.node.url);\n      //     function onReady(event) {\n      //       // access to player in all event handlers via event.target\n      //       event.target.pauseVideo();\n      //     }\n      //     const wrapperStyles = {\n      //       margin: '40px 0px',\n      //     };\n      //     return (\n      //       <div style={wrapperStyles}>\n      //         <YouTube videoId={id} opts={opts} onReady={onReady} />\n      //       </div>\n      //     );\n      //   },\n      image: function image(props) {\n        var url = urlForImage(props.node.asset).width(500).height(300).url();\n        return __jsx(\"img\", {\n          src: url,\n          alt: url,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }\n        });\n      },\n      table: function table(_ref2) {\n        var node = _ref2.node;\n        return __jsx(Table, {\n          tableContent: node,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 28\n          }\n        });\n      }\n    }\n  };\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(BlockContent, {\n    blocks: content,\n    serializers: serializers,\n    className: markdownStyles.markdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n_c = PostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["/home/anomy/Documents/nextjs-projects/yazbana/client/components/PostBody.js"],"names":["markdownStyles","BlockContent","Box","urlForImage","PostBody","content","serializers","types","image","props","url","node","asset","width","height","table","markdown"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,QAAT,OAA+B;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC5C,MAAMC,WAAW,GAAG;AAClB;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAAA,KAAK,EAAE,eAACC,KAAD,EAAW;AAChB,YAAMC,GAAG,GAAGP,WAAW,CAACM,KAAK,CAACE,IAAN,CAAWC,KAAZ,CAAX,CAA8BC,KAA9B,CAAoC,GAApC,EAAyCC,MAAzC,CAAgD,GAAhD,EAAqDJ,GAArD,EAAZ;AACA,eAAO;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAe,UAAA,GAAG,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OA/CI;AAgDLK,MAAAA,KAAK,EAAE;AAAA,YAAGJ,IAAH,SAAGA,IAAH;AAAA,eAAc,MAAC,KAAD;AAAO,UAAA,YAAY,EAAEA,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAAA;AAhDF;AALW,GAApB;AAwDA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEN,OADV;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,SAAS,EAAEN,cAAc,CAACgB,QAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD;KAlEuBZ,Q","sourcesContent":["import markdownStyles from './PostBody.module.css';\nimport BlockContent from '@sanity/block-content-to-react';\nimport { Box } from '@chakra-ui/layout';\nimport { urlForImage } from '@lib/sanity';\n\nexport default function PostBody({ content }) {\n  const serializers = {\n    // marks: { code: inlineCode, link: link },\n    // hardBreak: true,\n    // list: list,\n    // listItem,\n    types: {\n      //   block: BlockRenderer,\n      //   code: (props) => {\n      //     return (\n      //       <div>\n      //         <SyntaxHighlighter\n      //           showLineNumbers={false}\n      //           style={monokai}\n      //           wrapLines={true}\n      //           language={props.node.language}\n      //           lineProps={{ style: { wordBreak: 'break-word', whiteSpace: 'pre-wrap' } }}\n      //           customStyle={{\n      //             borderRadius: '8px',\n      //             margin: '20px 0px',\n      //             padding: '20px 20px',\n      //             fontSize: '13px',\n      //             boxShadow: '0px 1px 20px 10px rgba(1,1,1,0.1)',\n      //             width: '100%',\n      //           }}\n      //         >\n      //           {props.node.code}\n      //         </SyntaxHighlighter>\n      //       </div>\n      //     );\n      //   },\n      //   youtube: (props) => {\n      //     const opts = {\n      //       height: '290',\n      //       width: '100%',\n      //     };\n      //     let id = getYouTubeID(props.node.url);\n      //     function onReady(event) {\n      //       // access to player in all event handlers via event.target\n      //       event.target.pauseVideo();\n      //     }\n      //     const wrapperStyles = {\n      //       margin: '40px 0px',\n      //     };\n      //     return (\n      //       <div style={wrapperStyles}>\n      //         <YouTube videoId={id} opts={opts} onReady={onReady} />\n      //       </div>\n      //     );\n      //   },\n      image: (props) => {\n        const url = urlForImage(props.node.asset).width(500).height(300).url();\n        return <img src={url} alt={url} />;\n      },\n      table: ({ node }) => <Table tableContent={node} />,\n    },\n  };\n  return (\n    <Box>\n      <BlockContent\n        blocks={content}\n        serializers={serializers}\n        className={markdownStyles.markdown}\n      />\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}