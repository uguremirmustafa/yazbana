{"ast":null,"code":"var _jsxFileName = \"/home/anomy/Documents/nextjs-projects/yazbana/client/components/PostBody.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport markdownStyles from './PostBody.module.css';\nimport BlockContent from '@sanity/block-content-to-react';\nimport { Box } from '@chakra-ui/layout';\nexport default function PostBody(_ref) {\n  var _this = this;\n\n  var content = _ref.content;\n  var serializers = {\n    marks: {\n      code: inlineCode,\n      link: link\n    },\n    hardBreak: true,\n    list: list,\n    listItem: listItem,\n    types: {\n      block: BlockRenderer,\n      code: function code(props) {\n        return __jsx(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }\n        }, __jsx(SyntaxHighlighter, {\n          showLineNumbers: false,\n          style: monokai,\n          wrapLines: true,\n          language: props.node.language,\n          lineProps: {\n            style: {\n              wordBreak: 'break-word',\n              whiteSpace: 'pre-wrap'\n            }\n          },\n          customStyle: {\n            borderRadius: '8px',\n            margin: '20px 0px',\n            padding: '20px 20px',\n            fontSize: '13px',\n            boxShadow: '0px 1px 20px 10px rgba(1,1,1,0.1)',\n            width: '100%'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }\n        }, props.node.code));\n      },\n      youtube: function youtube(props) {\n        var opts = {\n          height: '290',\n          width: '100%'\n        };\n        var id = getYouTubeID(props.node.url);\n\n        function onReady(event) {\n          // access to player in all event handlers via event.target\n          event.target.pauseVideo();\n        }\n\n        var wrapperStyles = {\n          margin: '40px 0px'\n        };\n        return __jsx(\"div\", {\n          style: wrapperStyles,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }, __jsx(YouTube, {\n          videoId: id,\n          opts: opts,\n          onReady: onReady,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        }));\n      },\n      image: function image(props) {\n        var imgStyle = {\n          width: '100%',\n          maxWidth: '500px',\n          margin: '30px auto',\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          boxShadow: '0px 1px 20px 10px rgba(1,1,1,0.1)'\n        };\n        var url = imageUrlFor(props.node.asset).width(500).height(300).url();\n        return __jsx(\"img\", {\n          src: url,\n          alt: url,\n          style: imgStyle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }\n        });\n      },\n      table: function table(_ref2) {\n        var node = _ref2.node;\n        return __jsx(Table, {\n          tableContent: node,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }\n        });\n      }\n    }\n  };\n  return __jsx(Box, {\n    color: \"gray.800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(BlockContent, {\n    blocks: content,\n    serializers: serializers,\n    className: markdownStyles.markdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n_c = PostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["/home/anomy/Documents/nextjs-projects/yazbana/client/components/PostBody.js"],"names":["markdownStyles","BlockContent","Box","PostBody","content","serializers","marks","code","inlineCode","link","hardBreak","list","listItem","types","block","BlockRenderer","props","monokai","node","language","style","wordBreak","whiteSpace","borderRadius","margin","padding","fontSize","boxShadow","width","youtube","opts","height","id","getYouTubeID","url","onReady","event","target","pauseVideo","wrapperStyles","image","imgStyle","maxWidth","border","imageUrlFor","asset","table","markdown"],"mappings":"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","sourcesContent":["import markdownStyles from './PostBody.module.css';\nimport BlockContent from '@sanity/block-content-to-react';\nimport { Box } from '@chakra-ui/layout';\n\nexport default function PostBody({ content }) {\n  const serializers = {\n    marks: { code: inlineCode, link: link },\n    hardBreak: true,\n    list: list,\n    listItem,\n    types: {\n      block: BlockRenderer,\n      code: (props) => {\n        return (\n          <div>\n            <SyntaxHighlighter\n              showLineNumbers={false}\n              style={monokai}\n              wrapLines={true}\n              language={props.node.language}\n              lineProps={{ style: { wordBreak: 'break-word', whiteSpace: 'pre-wrap' } }}\n              customStyle={{\n                borderRadius: '8px',\n                margin: '20px 0px',\n                padding: '20px 20px',\n                fontSize: '13px',\n                boxShadow: '0px 1px 20px 10px rgba(1,1,1,0.1)',\n                width: '100%',\n              }}\n            >\n              {props.node.code}\n            </SyntaxHighlighter>\n          </div>\n        );\n      },\n      youtube: (props) => {\n        const opts = {\n          height: '290',\n          width: '100%',\n        };\n        let id = getYouTubeID(props.node.url);\n        function onReady(event) {\n          // access to player in all event handlers via event.target\n          event.target.pauseVideo();\n        }\n        const wrapperStyles = {\n          margin: '40px 0px',\n        };\n        return (\n          <div style={wrapperStyles}>\n            <YouTube videoId={id} opts={opts} onReady={onReady} />\n          </div>\n        );\n      },\n      image: (props) => {\n        const imgStyle = {\n          width: '100%',\n          maxWidth: '500px',\n          margin: '30px auto',\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          boxShadow: '0px 1px 20px 10px rgba(1,1,1,0.1)',\n        };\n        const url = imageUrlFor(props.node.asset).width(500).height(300).url();\n        return <img src={url} alt={url} style={imgStyle} />;\n      },\n      table: ({ node }) => <Table tableContent={node} />,\n    },\n  };\n  return (\n    <Box color=\"gray.800\">\n      <BlockContent\n        blocks={content}\n        serializers={serializers}\n        className={markdownStyles.markdown}\n      />\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}